- name: Configure TF2 Server
  hosts: tf2_server
  become: yes
  vars:
    tf2_env:
      RCON_PASSWORD: "{{ rcon_password }}"
      SERVER_HOSTNAME: "{{ server_hostname }}"
  tasks:
    - name: Download TF2 maps
      ansible.builtin.command: aws s3 sync s3://upfast-tf2-maps/ /home/ec2-user/maps

    - name: Copy api.py to the server
      ansible.builtin.copy:
        src: ./api.py
        dest: /home/ec2-user/api.py
        mode: '0644'

    # - name: Install pip and required Python packages
    #   community.docker.docker_container_exec:
    #     container: tf2-dedicated
    #     command: |
    #       wget https://bootstrap.pypa.io/get-pip.py &&
    #       python3 get-pip.py --user &&
    #       python3 -m pip install --user fastapi uvicorn &&
    #       rm get-pip.py

    - name: Run TF2 server Docker container
      community.docker.docker_container:
        name: tf2-dedicated
        image: ghcr.io/melkortf/tf2-base
        state: started
        recreate: yes
        network_mode: host
        env: "{{ tf2_env }}"
        interactive: yes
        tty: yes
        detach: yes
        volumes:
          - "/home/ec2-user/maps:/home/tf2/server/tf/maps"
          # - "/home/ec2-user/api.py:/home/tf2/api.py"

    # - name: Run Server info API in the background
    #   community.docker.docker_container_exec:
    #     container: tf2-dedicated
    #     command: bash -c "nohup python3 /home/tf2/api.py > /home/tf2/api.log 2>&1 &"
    #     detach: yes

    #install docker pip package
    # - name: Install docker pip package
    #   ansible.builtin.command: pip3 install docker

    # run the api.py file on the server
    - name: Create virtual environment for API
      ansible.builtin.command: python3 -m venv /home/ec2-user/api_venv
      args:
        creates: /home/ec2-user/api_venv

    - name: Install required packages for API
      ansible.builtin.pip:
        name:
          - docker
          - fastapi
          - uvicorn
        virtualenv: /home/ec2-user/api_venv
        state: present

    - name: Run the api.py file on the server in virtual environment
      ansible.builtin.shell: |
        source /home/ec2-user/api_venv/bin/activate
        nohup python3 /home/ec2-user/api.py > /home/ec2-user/api.log 2>&1 &
      args:
        executable: /bin/bash
      async: 0
      poll: 0

    - name: Restart TF2 server Docker container
      community.docker.docker_container:
        name: tf2-dedicated
        state: started
        env: "{{ tf2_env }}"
        restart: yes
      tags: 
        - never
        - restart



